setwd("C:/Users/vick_/Desktop/Data Analytics Projects/R_programming")
install.packages("tidyverse")
install.packages ("jsonlite")
library(jsonlite)
library(tidyverse)
Mechacar_mpg_table <- read.csv(file = 'MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv(file = 'MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv('MechaCar_mpg.csv', check.names = F, stringsAsFactors = F)
?read.csv
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
MechaCar_mpg <- read.csv("C:/Users/vick_/Desktop/Data Analytics Projects/R_programming/MechaCar_mpg.csv", sep="")
View(MechaCar_mpg)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
View(MechaCar_mpg)
View(MechaCar_mpg)
MechaCar_mpg <- read.csv("MechaCar_mpg.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg) #generate multiple linear regression model
lm(mpg ~ vehicle_lenght + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg) #generate multiple linear regression model
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg)) #generate summary statistics
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg)) #generate summary statistics
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg)) #generate summary statistics
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg)) #generate summary statistics
scoil <- read.csv("Suspension_Coil.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
head(scoil)
# 1 Step Determine Distribution
ggplot(scoil,aes(x=PSI))+ geom_density() # visualize distribution
# 2 Filter Dataset for Suspension Coil
scoil_filt <- scoil[,c("Manufacturing_Lot","PSI")]
#3 compare means across multiple levels
aov(PSI ~ Manufacturing_Lot,data=scoil_filt)
summary(aov(PSI ~ Manufacturing_Lot,data=scoil_filt))
TukeyHSD(ANOVA1)
# look at the results by lots - multiple comparison of means
ANOVA1=aov(PSI ~ Manufacturing_Lot,data=scoil_filt)
TukeyHSD(ANOVA1)
# To test normal distribution
shapiro.test(scoil$PSI)
t.test(log10(scoil$PSI),mu=mean(log10(scoil$PSI)))
View(MechaCar_mpg)
View(scoil)
mu=mean(log10(scoil$PSI)
t.test(log10(scoil$PSI),mu=mean(log10(scoil$PSI)))
mu=mean(log10(scoil$PSI))
mu
mu=mean(scoil$PSI)
mu
t.test(scoil$PSI), mu=mean(scoil$PSI))
t.test(scoil$PSI, mu=mean(scoil$PSI))
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
View(scoil_stats)
summary(PSI)
summary(scoil%PSI)
lm(PSI ~ Manufacturing_Lot,data=scoil_filt)
# Since this does not provide you with pvalue, use summary function()
anova(Fit)
fit=lm(PSI ~ Manufacturing_Lot,data=scoil_filt)
anova(fit)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
View(scoil)
t.test(scoil$PSI, mu= 1500)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
setwd("C:/Users/vick_/Desktop/Data Analytics Projects/R_programming")
setwd("C:/Users/vick_/Desktop/Data Analytics Projects/R_programming")
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg)) #generate summary statistics
View(MechaCar_mpg)
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg) #generate multiple linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance,data=MechaCar_mpg)) #generate summary statistics
scoil <- read.csv("Suspension_Coil.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
head(scoil)
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
# 1 Step Determine Distribution
ggplot(scoil,aes(x=PSI))+ geom_density() # visualize distribution
# To test normal distribution
shapiro.test(scoil$PSI)
# 2 Filter Dataset for Suspension Coil
scoil_filt <- scoil[,c("Manufacturing_Lot","PSI")]
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
scoil <- read.csv("Suspension_Coil.csv", header = TRUE, sep = ",", quote = "\"", check.names = F, stringsAsFactors = F)
head(scoil)
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
View(scoil_stats)
View(scoil_stats)
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
install.packages("tidyverse")
install.packages ("jsonlite")
library(jsonlite)
library(tidyverse)
scoil_stats <- scoil %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table with multiple columns
View(scoil_stats)
View(scoil_stats)
View(scoil_stats)
View(scoil_stats)
Lot1 <- subset(scoil,Manufacturing_Lot=="Lot1") %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
Lot1 <- subset(scoil,Manufacturing_Lot=="Lot1") %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
Lot2 <- subset(scoil,Manufacturing_Lot=="Lot2") %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
Lot2 <- subset(scoil,Manufacturing_Lot=="Lot3") %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
Lot3 <- subset(scoil,Manufacturing_Lot=="Lot3") %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
Lot2 <- subset(scoil,Manufacturing_Lot=="Lot2") %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),var_PSI=var(PSI), standard_dev_PSI=sd(PSI)) #create summary table
View(Lot1)
View(Lot2)
View(Lot2)
View(Lot3)
View(Lot3)
# 1 Step Determine Distribution
ggplot(scoil,aes(x=PSI))+ geom_density() # visualize distribution
# To test normal distribution
Lot_d1 <- subset(scoil,Manufacturing_Lot=="Lot1") %>% group_by(Manufacturing_Lot)
View(Lot_d1)
View(Lot_d1)
# To test normal distribution
Lot_d1 <- subset(scoil,Manufacturing_Lot=="Lot1") %>% group_by(Manufacturing_Lot) %>% summarize(Manufacturing_lot,PSI)
View(Lot_d1)
# To test normal distribution
Lot_d1 <- subset(scoil,Manufacturing_Lot=="Lot1") %>% group_by(Manufacturing_Lot) %>% summarize(Manufacturing_lot,PSI)
View(Lot1)
View(Lot_d1)
ggplot(Lot_d1,aes(x=PSI))+ geom_density()
Lot_d2 <- subset(scoil,Manufacturing_Lot=="Lot2")
ggplot(Lot_d2,aes(x=PSI))+ geom_density()
ggplot(Lot_d2,aes(x=PSI))+ geom_density() + ggplot(Lot_d1,aes(x=PSI))+ geom_density()
shapiro.test(scoil$PSI)
ggplot(Lot_d2,aes(x=PSI))+ geom_density() + ggplot(Lot_d1,aes(x=PSI))+ geom_density()
# 1 Step Determine Distribution
ggplot(scoil,aes(x=PSI))+ geom_density() # visualize distribution
t.test(scoil$PSI, mu= 1500)
